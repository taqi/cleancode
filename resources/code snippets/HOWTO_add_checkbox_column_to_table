package com.keebraa.java.cleancode.core.reviewcreation.wizard.committable;

import java.util.ArrayList;
import java.util.List;

import org.eclipse.swt.SWT;
import org.eclipse.swt.custom.TableEditor;
import org.eclipse.swt.graphics.Color;
import org.eclipse.swt.widgets.Button;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Table;
import org.eclipse.swt.widgets.TableColumn;
import org.eclipse.swt.widgets.TableItem;

import com.keebraa.java.cleancode.core.extensionpoints.CommitRepository;
import com.keebraa.java.cleancode.core.model.Commit;

public class CommitTableBuilder
{
    private Table commitTable;
    private List<TableEditor> editors;
    private CommitRepository repository;

    public void createTable(Composite parent)
    {
	commitTable = new Table(parent, SWT.BORDER | SWT.MULTI);
	commitTable.setHeaderVisible(true);
	editors = new ArrayList<TableEditor>(3);
    }

    private Table getTable()
    {
	if (commitTable == null)
	{
	    throw new RuntimeException("CommitTableBuilder: table is null. Call createTable first.");
	}
	return commitTable;
    }

    public void createCheckBoxColumn()
    {
	TableEditor editor = new TableEditor(getTable());
    }
    
    public void setCommitRepository(CommitRepository repository)
    {
	this.repository = repository;
    }
    
    public Table build()
    {
	TableColumn column1 = new TableColumn(getTable(), SWT.NONE);
	column1.setWidth (100);
	TableColumn column2 = new TableColumn(getTable(), SWT.NONE);
	column2.setWidth (100);
	for(Commit commit : repository.getAllCommits())
	{
	    TableEditor editor = new TableEditor(getTable());
	    TableItem item = new TableItem(getTable(), SWT.NONE);
	    Button check1 = new Button(getTable(), SWT.CHECK);
	    check1.setSize(check1.getSize().x - 10,check1.getSize().y - 2);
	    check1.pack();
	    editor.minimumWidth = check1.getSize ().x;
	    editor.horizontalAlignment = SWT.LEFT;
	    editor.setEditor(check1, item, 0);
	}
	return getTable();
    }
}
